{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.22.6.54827",
      "templateHash": "5378673839797840968"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Resorce Group location"
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "enter name of the virtual network",
      "metadata": {
        "description": "Provide the name of the virtual network"
      }
    },
    "vnetPrefix": {
      "type": "string",
      "defaultValue": "enter the vnet address prefix",
      "metadata": {
        "description": "Enter the virtual network prefix"
      }
    },
    "sNet1": {
      "type": "string",
      "defaultValue": "enter the name of the first subnet",
      "metadata": {
        "description": "Enter the ename of the second subnet"
      }
    },
    "sNet1Prefix": {
      "type": "string",
      "defaultValue": "enter the address prefix of first subnet",
      "metadata": {
        "description": "Enter the address prefix of the first subnet"
      }
    },
    "sNet2": {
      "type": "string",
      "defaultValue": "enter the name of the second subnet",
      "metadata": {
        "description": "Enter the name of the second subnet"
      }
    },
    "sNet2Prefix": {
      "type": "string",
      "defaultValue": "enter the address prefix of second subnet prefix",
      "metadata": {
        "description": "Enter the address prefix of second subnet"
      }
    },
    "sNet3": {
      "type": "string",
      "defaultValue": "enter the name of the third subnet",
      "metadata": {
        "description": "Enter the name of the third subnet"
      }
    },
    "sNet3Prefix": {
      "type": "string",
      "defaultValue": "enter the address prefix of the third subnet",
      "metadata": {
        "description": "Enter the address prefix of the third subnet"
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "name of vm",
      "minLength": 5,
      "maxLength": 15,
      "metadata": {
        "description": "Enter the name of the virtual machine"
      }
    },
    "adminName": {
      "type": "string",
      "defaultValue": "Enter the name of the admin account",
      "metadata": {
        "description": "Enter the name of the admin account"
      }
    },
    "adminPword": {
      "type": "securestring",
      "defaultValue": "Enter the password of the admin account",
      "minLength": 12,
      "metadata": {
        "description": "Enter the password of the admin account"
      }
    },
    "OSVersion": {
      "type": "string",
      "defaultValue": "2022-datacenter-azure-edition",
      "allowedValues": [
        "2016-datacenter",
        "2016-datacenter-gensecond",
        "2016-datacenter-server-core-g2",
        "2016-datacenter-server-core-smalldisk-g2",
        "2016-datacenter-smalldisk-g2",
        "2016-datacenter-with-containers-g2",
        "2016-datacenter-zhcn-g2",
        "2019-datacenter",
        "2019-datacenter-core-g2",
        "2019-datacenter-core-smalldisk-g2",
        "2019-datacenter-core-with-containers-g2",
        "2019-datacenter-core-with-containers-smalldisk-g2",
        "2019-datacenter-gensecond",
        "2019-datacenter-smalldisk-g2",
        "2019-datacenter-with-containers-g2",
        "2019-datacenter-with-containers-smalldisk-g2",
        "2019-datacenter-zhcn-g2",
        "2022-datacenter-azure-edition",
        "2022-datacenter-azure-edition-core",
        "2022-datacenter-azure-edition-core-smalldisk",
        "2022-datacenter-azure-edition-smalldisk",
        "2022-datacenter-core-g2",
        "2022-datacenter-core-smalldisk-g2",
        "2022-datacenter-g2",
        "2022-datacenter-smalldisk-g2"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "allowedValues": [
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11-1_v2",
        "Standard_DS11_v2",
        "Standard_DS12-1_v2",
        "Standard_DS12-2_v2",
        "Standard_DS12_v2",
        "Standard_DS13-2_v2",
        "Standard_DS13-4_v2",
        "Standard_DS13_v2"
      ],
      "metadata": {
        "description": "Select the size of the vm in terms of cpu and memory"
      }
    },
    "avSet": {
      "type": "string",
      "defaultValue": "enter the name of the availability set",
      "metadata": {
        "description": "Enter the name for the availability set"
      }
    },
    "dataDiskSize": {
      "type": "string",
      "defaultValue": "4",
      "allowedValues": [
        "4",
        "128",
        "512",
        "1023",
        "4096",
        "8192",
        "16384",
        "32767"
      ],
      "metadata": {
        "description": "Select the size of the data disk for the server"
      }
    },
    "osDiskPerformance": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "OS disk performance sku"
      }
    },
    "dataDiskPerformance": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Data disk performance sku"
      }
    }
  },
  "variables": {
    "nicName": "[format('{0}-NIC', parameters('vmName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}', parameters('avSet'))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomaincount": 2,
        "platformUpdateDomaincount": 3
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}-NSG', parameters('vmName'))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowRDPIn",
            "properties": {
              "description": "Allow RDP TCP 3389 IN",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": "100",
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowWinRMIn",
            "properties": {
              "description": "Allow WinRM TCP 5986 IN",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "5986",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": "110",
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-11-01",
      "name": "[format('{0}', parameters('vnetName'))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[format('{0}', parameters('vnetPrefix'))]"
          ]
        },
        "subnets": [
          {
            "name": "[format('{0}', parameters('sNet1'))]",
            "properties": {
              "addressPrefix": "[format('{0}', parameters('sNet1Prefix'))]"
            }
          },
          {
            "name": "[format('{0}', parameters('sNet2'))]",
            "properties": {
              "addressPrefix": "[format('{0}', parameters('sNet2Prefix'))]"
            }
          },
          {
            "name": "[format('{0}', parameters('sNet3'))]",
            "properties": {
              "addressPrefix": "[format('{0}', parameters('sNet3Prefix'))]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-05-01",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "enableAcceleratedNetworking": true,
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[format('{0}/subnets/{1}', resourceId('Microsoft.Network/virtualNetworks', format('{0}', parameters('vnetName'))), parameters('sNet1'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-NSG', parameters('vmName')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}', parameters('vnetName')))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-NSG', parameters('vmName')))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}', parameters('vmName'))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[format('{0}', parameters('vmSize'))]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', format('{0}', parameters('avSet')))]"
        },
        "osProfile": {
          "computerName": "[format('{0}', parameters('vmName'))]",
          "adminUsername": "[format('{0}', parameters('adminName'))]",
          "adminPassword": "[format('{0}', parameters('adminPword'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[format('{0}', parameters('OSVersion'))]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[format('{0}-osdisk', parameters('vmName'))]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[format('{0}', parameters('osDiskPerformance'))]"
            }
          },
          "dataDisks": [
            {
              "name": "[format('{0}-datadisk', parameters('vmName'))]",
              "diskSizeGB": "[format('{0}', parameters('dataDiskSize'))]",
              "lun": 0,
              "createOption": "Empty",
              "managedDisk": {
                "storageAccountType": "[format('{0}', parameters('dataDiskPerformance'))]"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', format('{0}', parameters('avSet')))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
      ]
    }
  ]
}